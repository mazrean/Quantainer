openapi: 3.0.2
servers:
  - url: http://localhost:3000/api/v1
info:
  description: 'QuantainerのAPI'
  version: '1.0.0'
  title: 'Quantainer API'
  contact:
    name: mazrean
    url: 'https://github.com/mazrean/Quantainer'
tags:
  - name: oauth2
  - name: user
  - name: file
  - name: resource
paths:
  /oauth2/callback:
    parameters:
      - $ref: '#/components/parameters/codeInQuery'
    get:
      tags:
        - oauth2
      summary: OAuthのコールバック
      description: OAuthのコールバック
      operationId: callback
      responses:
        "200":
          description: 成功
        "400":
          description: codeが誤っているとき
        "500":
          description: 予期しないエラー
  /oauth2/generate/code:
    get:
      tags:
        - oauth2
      summary: OAuthのcode_challengeとかの取得
      description: OAuthのcode_challengeとかの取得
      operationId: getGeneratedCode
      responses:
        "303":
          description: 成功。traQの認可画面に遷移する。
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: sessions=abcde12345; Path=/; HttpOnly
        "500":
          description: 予期しないエラー
  /oauth2/logout:
    post:
      tags:
        - oauth2
      summary: ログアウト
      description: ログアウト
      operationId: postLogout
      security:
        - traPMemberAuth: []
      responses:
        "200":
          description: 成功
        "401":
          description: ログインしていない
        "500":
          description: 予期しないエラー
  /users/me:
    get:
      tags:
        - user
      summary: 自分の情報の取得
      description: 自分の情報の取得
      operationId: getMe
      security:
        - traPMemberAuth: []
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: ログインしていない
        "500":
          description: 予期しないエラー
  /users:
    get:
      tags:
        - user
      summary: traQの全ユーザー取得
      description: traQの全ユーザー取得
      operationId: getUsers
      security:
        - traPMemberAuth: []
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "401":
          description: ログインしていない
        "500":
          description: 予期しないエラー
  /files:
    post:
      tags:
        - file
      summary: ファイルのアップロード
      description: ファイルのアップロード
      operationId: postFile
      security:
        - traPMemberAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewFile'
      responses:
        "201":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        "400":
          description: リクエストの形式が誤っている
        "401":
          description: ログインしていない
        "500":
          description: 予期しないエラー
  /files/{fileID}/resources:
    parameters:
      - $ref: '#/components/parameters/fileIDInPath'
    post:
      tags:
        - file
        - resource
      summary: リソースの作成
      description: リソースの作成
      operationId: postResource
      security:
        - traPMemberAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewResource'
      responses:
        "201":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "400":
          description: リクエストの形式が誤っている
        "401":
          description: ログインしていない
        "500":
          description: 予期しないエラー
  /files/{fileID}:
    parameters:
      - $ref: '#/components/parameters/fileIDInPath'
    get:
      tags:
        - file
      summary: ファイルの取得
      description: ファイルの取得
      operationId: getFile
      security:
        - traPMemberAuth: []
      responses:
        "200":
          description: 成功
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            images/svg+xml:
              schema:
                type: string
                format: svg
            images/gif:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
  /resources/{resourceID}:
    parameters:
      - $ref: '#/components/parameters/resourceIDInPath'
    get:
      tags:
        - resource
      summary: リソースの情報の取得
      description: リソースの情報の取得
      operationId: getResource
      security:
        - traPMemberAuth: []
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        "401":
          description: ログインしていない
        "500":
          description: 予期しないエラー
  /resources:
    get:
      tags:
        - resource
      summary: リソースの情報の取得
      description: リソースの情報の取得
      operationId: getResources
      security:
        - traPMemberAuth: []
      parameters:
        - $ref: '#/components/parameters/typeInQuery'
        - $ref: '#/components/parameters/userInQuery'
        - $ref: '#/components/parameters/limitInQuery'
        - $ref: '#/components/parameters/offsetInQuery'
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
        "401":
          description: ログインしていない
        "500":
          description: 予期しないエラー

components:
  securitySchemes:
    traPMemberAuth:
      type: apiKey
      in: cookie
      name: sessions
  parameters:
    codeInQuery:
      name: code
      in: query
      required: true
      description: OAuth2.0のcode
      schema:
        type: string
    fileIDInPath:
      name: fileID
      in: path
      required: true
      description: ファイルのid
      schema:
        type: string
        format: uuid
    resourceIDInPath:
      name: resourceID
      in: path
      required: true
      description: リソースid
      schema:
        type: string
        format: uuid
    typeInQuery:
      name: type
      in: query
      required: false
      description: リソースの種類
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ResourceType'
    userInQuery:
      name: user
      in: query
      required: false
      description: ファイル登録者
      schema:
        type: array
        items:
          description: traQID（UUIDでない方）
          type: string
          example: mazrean
    limitInQuery:
      name: limit
      in: query
      required: false
      description: 取得するデータの数
      schema:
        type: integer
    offsetInQuery:
      name: offset
      in: query
      required: false
      description: 取得するデータのoffset
      schema:
        type: integer
  schemas:
    User:
      description: ユーザー
      type: object
      properties:
        id:
          description: traQのID（UUID）
          type: string
          format: uuid
          example: eb4a287d-15d9-4f12-8fff-bd088b12ba80
        name:
          description: traQID（UUIDでない方）
          type: string
          example: mazrean
      required:
        - id
        - name
    NewFile:
      description: 新規ファイル
      type: object
      properties:
        file:
          type: string
          format: binary
      required:
        - file
    FileType:
      description: ファイルの種類
      type: string
      enum:
        - jpeg
        - png
        - webp
        - svg
        - gif
        - other
    File:
      description: ファイル
      type: object
      properties:
        id:
          description: ファイルのid
          type: string
          format: uuid
          example: eb4a287d-15d9-4f12-8fff-bd088b12ba80
        type:
          $ref: '#/components/schemas/FileType'
        creator:
          description: ファイルの作成者
          type: string
          example: mazrean
        createdAt:
          description: ファイル作成時刻
          type: string
          format: date-time
          example: '2019-09-25T09:51:31Z'
      required:
        - id
        - type
        - creator
        - createdAt
    ResourceType:
      description: リソースの種類
      type: string
      enum:
        - image
        - other
    NewResource:
      description: 新規リソース
      type: object
      properties:
        name:
          description: リソース名
          type: string
          example: ターゲットカーソル1
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        comment:
          description: リソースのコメント
          type: string
      required:
        - name
        - resourceType
        - comment
    Resource:
      description: リソース
      allOf:
      - $ref: '#/components/schemas/NewResource'
      - type: object
        properties:
          id:
            description: リソースid
            type: string
            format: uuid
            example: eb4a287d-15d9-4f12-8fff-bd088b12ba80
          creator:
            description: ファイルの作成者
            type: string
            example: mazrean
          fileID:
            description: ファイルid
            type: string
            format: uuid
            example: eb4a287d-15d9-4f12-8fff-bd088b12ba80
          createdAt:
            description: リソース作成時刻
            type: string
            format: date-time
            example: '2019-09-25T09:51:31Z'
        required:
          - id
          - creator
          - fileID
          - createdAt
    GroupType:
      description: グループの種類
      type: string
      enum:
        - artBook
        - other
    ReadPermission:
      description: グループ閲覧権限
      type: string
      enum:
        - public
        - private
    WritePermission:
      description: ファイル追加権限
      type: string
      enum:
        - public
        - private
    GroupBase:
      description: グループ系componentのbase
      type: object
      properties:
        name:
          description: グループ名
          type: string
          example: traP Graphic Collection 2021
        type:
          $ref: '#/components/schemas/GroupType'
        description:
          description: グループの説明
          type: string
          example: 2021年のコミケで販売したtraP Graphic Collection
        readPermission:
          $ref: '#/components/schemas/ReadPermission'
        writePermission:
          $ref: '#/components/schemas/WritePermission'
      required:
        - name
        - type
        - description
        - readPermission
        - writePermission
    NewGroup:
      description: グループ
      allOf:
        - $ref: '#/components/schemas/GroupBase'
        - type: object
          properties:
            mainResourceID:
              description: メインのリソース
              type: string
              format: uuid
            resourceIDs:
              description: グループに含むリソースのID
              type: array
              items:
                type: string
                format: uuid
          required:
            - mainResourceID
            - resourceIDs
    GroupDetail:
      description: グループの詳細情報
      allOf:
        - $ref: '#/components/schemas/GroupBase'
        - type: object
          properties:
            mainResourceID:
              $ref: '#/components/schemas/Resource'
            administrators:
              description: グループの管理者
              type: array
              items:
                type: string
                format: uuid
          required:
            - mainResourceID
            - administrators
    GroupInfo:
      description: グループの詳細情報
      allOf:
        - $ref: '#/components/schemas/GroupBase'
        - type: object
          properties:
            mainResourceID:
              $ref: '#/components/schemas/Resource'
          required:
            - mainResourceID
